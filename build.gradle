/*
 *  Copyright 2014-present the original author or authors.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

// *********************************************************************************************************************
// Apply plugins
// *********************************************************************************************************************
// Binary plugins - 
// Due to Gradle's constrained syntax for the plugins block, binary plugin versions can be expressed as properties
// here. This can be achieved if needed by moving the plugins to a pluginsManagement block in settings.gradle
plugins {
  id 'idea'
  id 'java'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  // Apply Boot plugin to provide managed, blessed dependencies and Gradle tasks such as assembling fat executable jar
  // Defines the version of Spring Boot used by the  project
  id 'org.springframework.boot' version '2.2.2.RELEASE'
}

// *********************************************************************************************************************
// Project Properties
// *********************************************************************************************************************
// Standard project properties. These are used as default values by some assembly and release task, e.g. jar
// See gradle.properties and settings.gradle, e.g.
//project.name - Property defined in settings.gradle, overriding the default used by Gradle which is based on proj dir
//project.version - Property defined in gradle.properties

// Extra user-defined project properties
ext {
  // Cribbed from https://github.com/mindscratch/reactor-offline/blob/master/build.gradle
  javadocLinks = [
    "http://docs.oracle.com/javase/11/docs/api/"
  ] as String[]
}

repositories {
  mavenCentral()
}

dependencies {
  // Note - Dependencies without a specified version use the blessed/test versions defined by the Spring Boot plugin.

  // Compile-time dependencies
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.cloud:spring-cloud-stream'
  // Add binder to support sending/receiving messages using a RabbitMQ broker
  implementation 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'

  // Test dependencies
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    // Exclude module supporting JUnit tests based on older JUnit 4 API
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

  // Provides SCS' TestSupportBinder to support testing SCS messaging apps without relying on connecting to msg broker
  // (app's configured SCS message binder). Only use in test scope as overrides other binders when detected on classpath
  // Other types of tests that wish to test in conjunction with the production message binder instead need to disable
  // the TestSupportBinder using one of the Spring Boot auto-config exclusion mechanisms, e.g.
  // @EnableAutoConfiguration(exclude= TestSupportBinderAutoConfiguration.class) or
  // @SpringBootApplication(exclude = TestSupportBinderAutoConfiguration.class)
  testImplementation('org.springframework.cloud:spring-cloud-stream-test-support')
}

dependencyManagement {
  imports {
    // Use the spring-cloud-stream-dependencies project's POM to define the blessed (compatible and tested)
    // combinations of versions of Spring Cloud Stream's libs and their transitive dependencies
    // Using this in preference to defining a broader dependency on the parent Spring Cloud umbrella project release
    ////mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    mavenBom "org.springframework.cloud:spring-cloud-stream-dependencies:${springCloudStreamDependenciesVersion}"
  }
}

// *********************************************************************************************************************
// Task configuration
// *********************************************************************************************************************

idea {
  project {
    jdkName = '11'
    languageLevel = '11'
    // Force IDEA project to use required bytecode version for access to Java language features.
    targetBytecodeVersion = 'VERSION_11' 
  }
  module {
    // Force IDEA module to use required bytecode version for access to Java language features. Contrary to Gradle
    // manual docs for idea task, IJ does not inherit this value from the project
    targetBytecodeVersion = 'VERSION_11' 
  }
}

test {
  useJUnitPlatform() // Enable support for JUnit 5+

  testLogging {
    showStandardStreams = true // Log any output that the tests write to stdout or stderr
    events "passed", "skipped", "failed" // Log the execution of each test and its result
  }
}